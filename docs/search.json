[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "eRando em Ciênc1a de D4do$",
    "section": "",
    "text": "Bem Vindo\nEste é um livro sobre a utilização da linguagem R em Ciência de Dados.\nEste material é um projeto pessoal usado como fonte de consulta e aprendizado, sem compromisso com uma estrutura específica.\nMuitas vezes o exposto aqui é a prática (para fixação e exploração) de conceitos apresentados em outros materiais. Assim todas as fontes utilizadas, mesmo que de forma subjetiva, são citadas."
  },
  {
    "objectID": "index.html#versões",
    "href": "index.html#versões",
    "title": "eRando em Ciênc1a de D4do$",
    "section": "Versões",
    "text": "Versões\nA versão do R utilizada é a 4.3.0, Already Tomorrow.\nA versão do RStudio é 2023.06.1+524, Mountain Hydrangea.\nA versão do Quarto é 1.2.475.\n\nÚltima atualização: 11/08/2023 - 23:17:11"
  },
  {
    "objectID": "autor.html",
    "href": "autor.html",
    "title": "Sobre o Autor",
    "section": "",
    "text": "Luís Gustavo Schuck é formado em Gestão Financeira (2013) pelo Centro Universitário Internacional - Uninter. Possui Especialização em Business Analytics (2021) pela Universidade Federal do Rio Grande do Sul - UFRGS, MBA em Administração e Finanças (2017) pelo Centro Universitário Internacional - Uninter e MBA em Gestão Bancária (2015) pelo Centro Universitário Leonardo da Vinci - Uniasselvi. Possui certificação ANBIMA CPA-10 (Certificação Profissional ANBIMA Série-10).\nAtualmente é aluno do curso de Análise e Desenvolvimento de Sistemas pela Universidade Feevale e atua como Analista na Unidade de Risco de Crédito do Banco do Estado do Rio Grande do Sul (Banrisul). Utiliza R desde 2017.\n\nÚltima atualização: 06/08/2023 - 21:22:45"
  },
  {
    "objectID": "intro_r.html#distribuição-de-conhecimento",
    "href": "intro_r.html#distribuição-de-conhecimento",
    "title": "Linguagem R",
    "section": "Distribuição de Conhecimento",
    "text": "Distribuição de Conhecimento\nUma grande vantagem da liguagem R é a existência de uma gama enorme de conteúdos distribuídos através da Internet, muitos de forma livre e de fácil acesso. Abaixo alguns sites com conteúdos muito ricos sobre R:\n\nAnálise de Dados Financeiros e Econômicos com o R - Versão Online\nIntrodução à Linguagem R: seus fundamentos e sua prática\nR Manuals\nBig Book of R\nR for Data Science\nDatacamp\nStatistics Globe\nR Charts\nStatistical tools for high-throughput data analysis\n\n\nTeam (2023)\nÚltima atualização: 11/08/2023 - 22:27:35\n\n\n\n\nTeam, R Core. 2023. R: A Language and Environment for Statistical Computing. Vienna, Austria: R Foundation for Statistical Computing. https://www.R-project.org/."
  },
  {
    "objectID": "nomes.html#nomes",
    "href": "nomes.html#nomes",
    "title": "1  Nomeando Objetos",
    "section": "1.1 Nomes",
    "text": "1.1 Nomes\nA linguagem R aceita muitas possibilidades para nomeação de objetos. Inclusive podem ser criados objetos com espaços em seus nomes e até mesmo com caracteres especiais (desde que entre aspas ou crases).\n\nx <- 10\n\n.x <- 10\n\n`nome com espaco` <- 55\n\n'teste 1' <- 2\n\n\n\n\n\n\n\nNomes Significativos\n\n\n\nEscolha nomes intuitivos e que facilitem a identificação do conteúdo armazenado nos objetos.\n\n\nUm objeto criado através do uso de aspas ou crases tem seu conteúdo acessado quando “chamado” com crases. Aspas são entendidas como sinalização para strings e assim não retornam o conteúdo do objeto e sim a própria string informada.\n\n'teste 1' #retorna como string\n\n[1] \"teste 1\"\n\n# Exibe conteúdo do objeto\n`teste 1`\n\n[1] 2\n\n\nObjetos podem ser criados com “.” no início de seus nomes. Estes são objetos ocultos e portanto não aparecem em um comando ls “puro”, por exemplo. Tampouco são exibidos na aba Environment do RStudio. Para visualizá-los através da função ls pode ser usado o parâmetro all.names = T.\n\nls()\n\n[1] \"nome com espaco\" \"teste 1\"         \"x\"              \n\nls(all.names = T)\n\n[1] \".main\"           \".x\"              \"nome com espaco\" \"teste 1\"        \n[5] \"x\"              \n\n\n\n1.1.1 Primeiro Caractere\nExistem algumas regras para iniciar o nome dos objetos. Alguns caracteres “especiais” não podem ser usados, bem como os números.\n\n$x <- 10  \n\nError: <text>:1:1: '$' inesperado\n1: $\n    ^\n\n\n\n55x <- 10 \n\nError: <text>:1:3: unexpected symbol\n1: 55x\n      ^\n\n\nPerceba que números podem ser usados nos nomes, desde que o primeiro caractere seja ‘válido’. Mas o mesmo não ocorre com caracteres “especiais”.\n\nx55x <- 888\n\nx55x\n\n[1] 888\n\n\n\nx$ <- 10\n\nError: <text>:1:4: unexpected assignment\n1: x$ <-\n       ^\n\n\nUma alternativa se dá mais uma vez com o uso de aspas ou crases. Com elas é possível ‘burlar’ estas limitações.\n\n`teste @!&` <- 123456\n\n`teste @!&`\n\n[1] 123456\n\n'55 teste @!&' <- 10\n\n`55 teste @!&`\n\n[1] 10\n\n\nApesar de possível, objetos com nomes mais complicados como os exemplificados acabam tornando a vida do programador um pouco mais difícil."
  },
  {
    "objectID": "nomes.html#case-sensitive",
    "href": "nomes.html#case-sensitive",
    "title": "1  Nomeando Objetos",
    "section": "1.2 Case Sensitive",
    "text": "1.2 Case Sensitive\nR é uma linguagem case sensitive, ou seja, ela diferencia maiúsculas de minúsculas. Assim um objeto com nome de Teste é diferente teste, tesTe, TESTE…\n\nteste <- 10\nTeste <- 15\ntesTe <- 20\nTESTE <- 25\n\nls()\n\n [1] \"55 teste @!&\"    \"nome com espaco\" \"teste\"           \"tesTe\"          \n [5] \"Teste\"           \"TESTE\"           \"teste @!&\"       \"teste 1\"        \n [9] \"x\"               \"x55x\""
  },
  {
    "objectID": "nomes.html#convenções",
    "href": "nomes.html#convenções",
    "title": "1  Nomeando Objetos",
    "section": "1.3 Convenções",
    "text": "1.3 Convenções\nConforme o seu código em R (e de outra linguagem qualquer) for crescendo você perceberá rapidamente a necessidade de identificar de forma intuitiva os objetos criados. Assim, é muito interessante a utilização de alguma convenção para facilitar sua vida. Existem diversas delas, como camelCase, snake_case, SCREAMING_SNAKE_CASE, etc. Uma “regra” importante seria não usar “.” em nome de objetos, pois através do ponto o R acessa funções (métodos) de acordo com a classe do objeto. Usar o ponto pode causar certa confusão.\n\n# camelCase\nobjetoTeste <- 'Teste camelCase'\n\n# snake_case\nobjeto_teste <- 'Teste snake_case'\n\nUm bom guia é o The tidyverse style guide. Tenha sempre em mente que sue código deve ser lido com facilidade no futuro e muitas vezes por outros usuários.\n\nGrolemund (2014)\nTeam (2023)\nWikipedia (2023)\nÚltima atualização: 08/08/2023 - 18:48:56\n\n\n\n\nGrolemund, Garrett. 2014. Hands-On Programming with R. O’Reilly. https://rstudio-education.github.io/hopr/.\n\n\nTeam, R Core. 2023. An Introduction to R. R Foundation for Statistical Computing. https://cran.r-project.org/doc/manuals/r-release/R-intro.html.\n\n\nWikipedia, the free encyclopedia. 2023. \"Naming convention (programming)\". 2023. https://en.wikipedia.org/wiki/Naming_convention_(programming)."
  },
  {
    "objectID": "data_frames.html#o-que-são-data-frames",
    "href": "data_frames.html#o-que-são-data-frames",
    "title": "2  Data Frames",
    "section": "2.1 O que são data frames ?",
    "text": "2.1 O que são data frames ?\nConforme o próprio manual do R, data.frame é a estrutura que imita de forma mais próxima um dataset do SAS ou SPSS. De forma resumida um data.frame é uma estrutura tabular com colunas (variáveis, atributos, etc) e linhas (registros, casos, observações, instâncias, etc). Diferente de uma matriz um data.frame pode ter diferentes tipos de dados em suas colunas.\nUm data.frame possui todas as colunas com o mesmo tamanho (quantidade de regitros). A classe de um objeto data.frame possui o mesmo nome, data.frame. Abaixo pode ser visualizada a classe do data.frame Iris (muito usado em exemplos em Ciência de Dados) e também as primeiras linhas com o comando head.\n\nclass(iris)\n\n[1] \"data.frame\"\n\nhead(iris)\n\n  Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n1          5.1         3.5          1.4         0.2  setosa\n2          4.9         3.0          1.4         0.2  setosa\n3          4.7         3.2          1.3         0.2  setosa\n4          4.6         3.1          1.5         0.2  setosa\n5          5.0         3.6          1.4         0.2  setosa\n6          5.4         3.9          1.7         0.4  setosa"
  },
  {
    "objectID": "data_frames.html#atributos",
    "href": "data_frames.html#atributos",
    "title": "2  Data Frames",
    "section": "2.2 Atributos",
    "text": "2.2 Atributos\nOs atributos “padrão” de um data.frame são: names, class e row.names. É possível acessá-los com a função attributes. O atributo names também pode ser obtido com a função names.\n\nattributes(iris)\n\n$names\n[1] \"Sepal.Length\" \"Sepal.Width\"  \"Petal.Length\" \"Petal.Width\"  \"Species\"     \n\n$class\n[1] \"data.frame\"\n\n$row.names\n  [1]   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18\n [19]  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35  36\n [37]  37  38  39  40  41  42  43  44  45  46  47  48  49  50  51  52  53  54\n [55]  55  56  57  58  59  60  61  62  63  64  65  66  67  68  69  70  71  72\n [73]  73  74  75  76  77  78  79  80  81  82  83  84  85  86  87  88  89  90\n [91]  91  92  93  94  95  96  97  98  99 100 101 102 103 104 105 106 107 108\n[109] 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126\n[127] 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144\n[145] 145 146 147 148 149 150\n\nnames(iris)\n\n[1] \"Sepal.Length\" \"Sepal.Width\"  \"Petal.Length\" \"Petal.Width\"  \"Species\""
  },
  {
    "objectID": "data_frames.html#dimensões",
    "href": "data_frames.html#dimensões",
    "title": "2  Data Frames",
    "section": "2.3 Dimensões",
    "text": "2.3 Dimensões\nA função dim retorna as dimensões de um data.frame (linhas e colunas). Estes dados também podem ser obtidos com as funções nrow e ncol.\n\ndim(iris)\n\n[1] 150   5\n\nnrow(iris)\n\n[1] 150\n\nncol(iris)\n\n[1] 5"
  },
  {
    "objectID": "data_frames.html#acessando-dados",
    "href": "data_frames.html#acessando-dados",
    "title": "2  Data Frames",
    "section": "2.4 Acessando Dados",
    "text": "2.4 Acessando Dados\n\n2.4.1 Índices\nComo a estrutura de um data.frame é organizada em linhas e colunas, podemos acessar os dados utilizando colchetes ([ ]): base[linha, coluna]. Podem ser usados intervalos de índices com o operador :.\n\n# Acessar primeira linha e segunda coluna (Sepal.Width)\niris[1, 2]\n\n[1] 3.5\n\n# Acessar linhas 1 até 3 e a segunda coluna\niris[1:3, 2]\n\n[1] 3.5 3.0 3.2\n\n\nApesar de ser possível, utilizar o índice faz com que a referência seja relativa, ou seja, a variável ‘1’ pode mudar caso o data.frame seja editado. Por exemplo, caso em algum momento anterior a variável Sepal.Length tenha sido excluída, uma nova variável assumirá o índice 1. Além disto, no momento da leitura do código por um usuário não fica claro qual variável está sendo acessada.\n\n\n2.4.2 Usando Nomes das Colunas\nExistem diversas outras formas para acessar dados de um data.frame, inclusive utilizando o nome da coluna de forma explícita.\n\n# Acessar primeira linha e segunda coluna (pelo nome)\niris[1:3, 'Sepal.Width']\n\n[1] 3.5 3.0 3.2\n\n\nUma forma bastante comum é através da utilização do operador $ para acessar a coluna pelo seu nome.\n\n# Acessar primeira linha e segunda coluna\niris[1, ]$Sepal.Width\n\n[1] 3.5\n\n# Acessar linhas 1 até 3 e a segunda coluna\niris[1:3, ]$Sepal.Width\n\n[1] 3.5 3.0 3.2\n\n\n\n\n2.4.3 Filtrando Dados\nDigamos que se deseje acessar apenas dados que cumpram determinada condição. Para isto, na seleção das linhas do data.frame, deve ser informada condição lógica na forma abaixo:\n\n# Retorna valores de Speal.Width onde Petal.Length for maior do que 6\nx <- iris[iris$Petal.Length > 6.5, 'Sepal.Width']\ny <- iris[iris$Petal.Length > 6.5, ]$Sepal.Width\n\nx\n\n[1] 3.0 3.8 2.6 2.8\n\ny\n\n[1] 3.0 3.8 2.6 2.8\n\n# Função que compara os objetos\nidentical(x, y)\n\n[1] TRUE\n\n\nO retorno é dado pelas linhas em que a variável Petal.Length atende as condições declaradas. Este teste retorna um vetor de valores lógicos, e os valores TRUE são os que “permanecem”. Abaixo outro exemplo:\n\nhead(iris$Petal.Length) > 1.4\n\n[1] FALSE FALSE FALSE  TRUE FALSE  TRUE\n\n\nAplicando este vetor de valores lógicos, o R entende que as posições correspondentes a TRUE devem ser mantidas. No exemplo abaixo, as posições (linhas) 4 e 6 atendem a condição especificada, portanto apenas estas serão selecionadas.\n\niris2 <- head(iris)\nfiltro <- head(iris2$Petal.Length) > 1.4\nfiltro\n\n[1] FALSE FALSE FALSE  TRUE FALSE  TRUE\n\niris2[filtro, 'Sepal.Width']\n\n[1] 3.1 3.9\n\n\nEquivalente ao comando abaixo:\n\niris2[c(4, 6), 'Sepal.Width']\n\n[1] 3.1 3.9\n\n\n\n2.4.3.1 Classes de retorno\nOs filtros em data.frames usados com $ ou [ ] (com apenas 1 variável) retornam vetores e não data.frame. Desta forma se perde a classe e a estrutura tabular original do data.frame.\n\nclass(iris[1:3, 1])\n\n[1] \"numeric\"\n\nclass(iris[1:3, 'Sepal.Width'])\n\n[1] \"numeric\"\n\n\nEntretanto, sendo selecionadas mais de uma coluna, a classe retornada segue sendo data.frame.\n\nclass(iris[1:3, c(\"Sepal.Length\", \"Sepal.Width\")])\n\n[1] \"data.frame\"\n\nclass(iris[1:3, 1:2])\n\n[1] \"data.frame\"\n\n\n\n\n2.4.3.2 Função Subset\nA função subset permite efetuar filtro em um data.frame e muitas vezes oferece uma forma mais organizada visualmente, principalmente quando em filtros com muitas condiões. Uma outra vantagem é que a função subset retorna faz a seleção em um data.frame e retorna um data.frame, mesmo com a seleção de apenas 1 variável.\nEsta função também permite seleção de colunas a serem mantidas. Note que a função subset não demanda que o data.frame seja referenciado antes das variáveis e também aceita os nomes das variáveis sem aspas. Isto torna o código mais legível.\n\nclass(subset(iris, select = Petal.Width))\n\n[1] \"data.frame\"\n\n\n\nsubset(x = mtcars, # dados\n       subset = mpg > 25, # filtro  \n       select = c(mpg, cyl, hp)) # colunas\n\n                mpg cyl  hp\nFiat 128       32.4   4  66\nHonda Civic    30.4   4  52\nToyota Corolla 33.9   4  65\nFiat X1-9      27.3   4  66\nPorsche 914-2  26.0   4  91\nLotus Europa   30.4   4 113\n\n\nUsando um filtro um pouco mais complexo e sem inserir o nome dos argumentos da função (x, subset e select):\n\nmtcars_filtrado <- subset(mtcars, # dados \n       mpg > 25 & cyl == 4 & hp > 70, # filtro  \n       c(mpg, cyl, hp)) # colunas\n\nmtcars_filtrado\n\n               mpg cyl  hp\nPorsche 914-2 26.0   4  91\nLotus Europa  30.4   4 113\n\n\n\nTeam (2023)\nÚltima atualização: 08/08/2023 - 18:56:06\n\n\n\n\nTeam, R Core. 2023. R Language Definition. R Foundation for Statistical Computing. https://cran.r-project.org/doc/manuals/r-release/R-lang.html."
  },
  {
    "objectID": "operacoes_logicas.html#operadores-relacionais",
    "href": "operacoes_logicas.html#operadores-relacionais",
    "title": "3  Operações Lógicas",
    "section": "3.1 Operadores Relacionais",
    "text": "3.1 Operadores Relacionais\n\n\n\nOperador\nFunção\n\n\n\n\n>\nMaior que\n\n\n<\nMenor que\n\n\n>=\nMaior ou igual a\n\n\n<=\nMenor ou igual a\n\n\n==\nIgual a\n\n\n!=\nDiferente de\n\n\n\n\n5 > 6\n\n[1] FALSE\n\n5 <= 6\n\n[1] TRUE\n\n5 == 6\n\n[1] FALSE\n\n5 != 6\n\n[1] TRUE"
  },
  {
    "objectID": "operacoes_logicas.html#operadores-lógicos",
    "href": "operacoes_logicas.html#operadores-lógicos",
    "title": "3  Operações Lógicas",
    "section": "3.2 Operadores Lógicos",
    "text": "3.2 Operadores Lógicos\n\n\n\nOperador\nFunção\n\n\n\n\n!\nNegação\n\n\n&\nE\n\n\n|\nOu\n\n\nxor\nOu exclusivo\n\n\nisTRUE\nTesta se verdadeiro\n\n\nisFALSE\nTesta se falso\n\n\n\n\n!FALSE\n\n[1] TRUE\n\n!TRUE\n\n[1] FALSE\n\n5 > 6\n\n[1] FALSE\n\n!5 > 6\n\n[1] TRUE\n\nisTRUE(5 > 6)\n\n[1] FALSE\n\nisFALSE(5 > 6)\n\n[1] TRUE\n\n\n\n3.2.1 Ou Exclusivo (Xor)\nO operador xor fornece saída verdadeira quando apenas um dos valores for verdadeiro.\n\n# Falso XOR Falso = Falso\nxor(5 > 6, 6 > 9)\n\n[1] FALSE\n\n# Verdadeiro XOR Verdadeiro = Falso\nxor(5 > 4, 6 > 5)\n\n[1] FALSE\n\n# Verdadeiro XOR Falso = Verdadeiro\nxor(5 > 4, 6 > 9)\n\n[1] TRUE\n\n# Falso XOR Verdadeiro = Falso\nxor(5 > 6, 6 > 5)\n\n[1] TRUE"
  },
  {
    "objectID": "operacoes_logicas.html#precedência",
    "href": "operacoes_logicas.html#precedência",
    "title": "3  Operações Lógicas",
    "section": "3.3 Precedência",
    "text": "3.3 Precedência\nNa utilização de testes lógicos é importante observar a ordem (precedência) de aplicação dos operadores. O uso de parênteses altera a o escopo de aplicação dos operadores.\n\nPrecedência de Operadores\n\n\nOrdem\nOperador\n\n\n\n\n1\n<, >, <=, >=, ==, !=\n\n\n2\n!\n\n\n3\n&\n\n\n4\n|\n\n\n\nAbaixo alguns testes.\n\n# Falso E Falso = Falso\n5 > 6 & 4 > 5\n\n[1] FALSE\n\n# Verdadeiro E Verdadeiro = Verdadeiro}\n!5 > 6 & !4 > 5\n\n[1] TRUE\n\n# Verdadeiro E Falso = Falso\n!5 > 6 & 4 > 5\n\n[1] FALSE\n\n# Negação de( Falso E Falso = Falso) = Verdadeiro\n!(5 > 6 & 4 > 5)\n\n[1] TRUE\n\n\n\n# Falso OU Falso = Falso\n5 > 6 | 4 > 5\n\n[1] FALSE\n\n# Verdadeiro OU Verdadeiro = Verdadeiro\n!5 > 6 | !4 > 5\n\n[1] TRUE\n\n# Verdadeiro OU Falso = Verdadeiro\n!5 > 6 | 4 > 5\n\n[1] TRUE\n\n# Negação de( Falso OU Falso = Falso) = Verdadeiro\n!(5 > 6 | 4 > 5)\n\n[1] TRUE\n\n\n\nTeam (2023)\nÚltima atualização: 08/08/2023 - 18:53:41\n\n\n\n\nTeam, R Core. 2023. R: A Language and Environment for Statistical Computing. Vienna, Austria: R Foundation for Statistical Computing. https://www.R-project.org/."
  },
  {
    "objectID": "pacotes.html#o-que-são-pacotes",
    "href": "pacotes.html#o-que-são-pacotes",
    "title": "4  Pacotes",
    "section": "4.1 O que são pacotes?",
    "text": "4.1 O que são pacotes?\nUm pacote em R é basicamente um conjunto de funções e/ou funcionalidades criadas por terceiros que “expandem” o poder da linguagem. A principal opção para instalação de pacotes é através do CRAN. O CRAN é um repositório que contém milhares de pacotes (19.466 em maio de 2023). Nele também podem ser encontrados pacotes em suas versões “antigas”. Caso algum pacote não esteja hospedado no CRAN, ele também pode ser instalado, diretamente do arquivo fornecido pelo desenvolvedor do pacote por exemplo (muitos distribuem através do Github).\nExistem alguns pacotes “especiais” em R que compõem a própria linguagem. Estes pacotes possuem suas versões idênticas à da linguagem e são “classificados” com prioridade “base”. Assim quando se faz a instalação da linguagem R, muitos pacotes também são instalados."
  },
  {
    "objectID": "pacotes.html#pacotes-instalados",
    "href": "pacotes.html#pacotes-instalados",
    "title": "4  Pacotes",
    "section": "4.2 Pacotes Instalados",
    "text": "4.2 Pacotes Instalados\nPodemos ver os pacotes instalados com o comando installed.packages:\n\n# Exibindo 5 primeiros\nas.data.frame(installed.packages())$Package[1:5]\n\n[1] \"askpass\"   \"backports\" \"base64enc\" \"bit\"       \"bit64\"    \n\n\nA função installed.packages retorna uma série de informações a respeito dos pacotes. Abaixo alguns exemplos de pacotes bastante utilizados. Para simplificar a visualização foi usada função t, que transpõe o data.frame de colunas para linhas.\n\npacotes <- as.data.frame(installed.packages())\n# pacote base\nt(pacotes[pacotes$Package == 'base',])\n\n                      base                                \nPackage               \"base\"                              \nLibPath               \"C:/Program Files/R/R-4.3.0/library\"\nVersion               \"4.3.0\"                             \nPriority              \"base\"                              \nDepends               NA                                  \nImports               NA                                  \nLinkingTo             NA                                  \nSuggests              \"methods\"                           \nEnhances              NA                                  \nLicense               \"Part of R 4.3.0\"                   \nLicense_is_FOSS       NA                                  \nLicense_restricts_use NA                                  \nOS_type               NA                                  \nMD5sum                NA                                  \nNeedsCompilation      NA                                  \nBuilt                 \"4.3.0\"                             \n\n# pacote MASS\nt(pacotes[pacotes$Package == 'MASS',])\n\n                      MASS                                             \nPackage               \"MASS\"                                           \nLibPath               \"C:/Program Files/R/R-4.3.0/library\"             \nVersion               \"7.3-58.4\"                                       \nPriority              \"recommended\"                                    \nDepends               \"R (>= 4.3.0), grDevices, graphics, stats, utils\"\nImports               \"methods\"                                        \nLinkingTo             NA                                               \nSuggests              \"lattice, nlme, nnet, survival\"                  \nEnhances              NA                                               \nLicense               \"GPL-2 | GPL-3\"                                  \nLicense_is_FOSS       NA                                               \nLicense_restricts_use NA                                               \nOS_type               NA                                               \nMD5sum                NA                                               \nNeedsCompilation      \"yes\"                                            \nBuilt                 \"4.3.0\"                                          \n\n# pacote data.table\nt(pacotes[pacotes$Package == 'data.table',])\n\n                      data.table                                                                                               \nPackage               \"data.table\"                                                                                             \nLibPath               \"C:/Users/luisg/AppData/Local/R/win-library/4.3\"                                                         \nVersion               \"1.14.8\"                                                                                                 \nPriority              NA                                                                                                       \nDepends               \"R (>= 3.1.0)\"                                                                                           \nImports               \"methods\"                                                                                                \nLinkingTo             NA                                                                                                       \nSuggests              \"bit64 (>= 4.0.0), bit (>= 4.0.4), curl, R.utils, xts,\\nnanotime, zoo (>= 1.8-1), yaml, knitr, rmarkdown\"\nEnhances              NA                                                                                                       \nLicense               \"MPL-2.0 | file LICENSE\"                                                                                 \nLicense_is_FOSS       NA                                                                                                       \nLicense_restricts_use NA                                                                                                       \nOS_type               NA                                                                                                       \nMD5sum                NA                                                                                                       \nNeedsCompilation      \"yes\"                                                                                                    \nBuilt                 \"4.3.0\"                                                                                                  \n\n\nPode ser visto no campo Priority que para o pacote base o conteúdo é “base”, isto significa que este faz parte da instalação do R. Já o pacote MASS, por exemplo, é um pacote recomendado. O pacote data.table, que é um pacote “normal”, não possui informação no campo Priority.\nTambém podemos visualizar dados do pacote (arquivo DESCRIPTION do próprio pacote) com o comando packageDescription:\n\npackageDescription('base')\n\nPackage: base\nVersion: 4.3.0\nPriority: base\nTitle: The R Base Package\nAuthor: R Core Team and contributors worldwide\nMaintainer: R Core Team <do-use-Contact-address@r-project.org>\nContact: R-help mailing list <r-help@r-project.org>\nDescription: Base R functions.\nLicense: Part of R 4.3.0\nSuggests: methods\nBuilt: R 4.3.0; ; 2023-04-21 09:22:06 UTC; windows\n\n-- File: C:/PROGRA~1/R/R-43~1.0/library/base/Meta/package.rds"
  },
  {
    "objectID": "pacotes.html#pasta-de-instalação",
    "href": "pacotes.html#pasta-de-instalação",
    "title": "4  Pacotes",
    "section": "4.3 Pasta de Instalação",
    "text": "4.3 Pasta de Instalação\nO R possui pastas de instalação dos pacotes. Para visualizá-las basta usar o comando .libPaths. A pasta padrão de instalação traz os diversos pacotes que foram instalados junto com o R (os “básicos” e os recomendados).\n\n.libPaths()\n\n[1] \"C:/Users/luisg/AppData/Local/R/win-library/4.3\"\n[2] \"C:/Program Files/R/R-4.3.0/library\"            \n\n# Exibir 10 primeiros da primeira pasta\nlist.files(.libPaths()[1])[1:10]\n\n [1] \"askpass\"   \"backports\" \"base64enc\" \"bit\"       \"bit64\"     \"blob\"     \n [7] \"broom\"     \"bslib\"     \"cachem\"    \"callr\"    \n\n# Exibir 10 primeiros da segunda pasta\nlist.files(.libPaths()[2])[1:10]\n\n [1] \"base\"      \"boot\"      \"class\"     \"cluster\"   \"codetools\" \"compiler\" \n [7] \"datasets\"  \"foreign\"   \"graphics\"  \"grDevices\""
  },
  {
    "objectID": "pacotes.html#pacotes-disponíveis",
    "href": "pacotes.html#pacotes-disponíveis",
    "title": "4  Pacotes",
    "section": "4.4 Pacotes Disponíveis",
    "text": "4.4 Pacotes Disponíveis\nA função available.packages procura pacotes disponíveis no valor informado no argumento repos. Por padrão é buscado de getOption(“repos”).\n\n# Definir repositório\noptions(repos = 'https://cran.rstudio.com/')\n\n# Exibindo 5 primeiros\navailable.packages()[1:5]\n\n[1] \"A3\"            \"AalenJohansen\" \"AATtools\"      \"ABACUS\"       \n[5] \"abasequence\""
  },
  {
    "objectID": "pacotes.html#dependências-de-pacotes",
    "href": "pacotes.html#dependências-de-pacotes",
    "title": "4  Pacotes",
    "section": "4.5 Dependências de Pacotes",
    "text": "4.5 Dependências de Pacotes\nOs pacotes podem e em sua maioria utilizam funções de outros pacotes. Estes “outros pacotes” são denominadas de dependências. As informações de dependências também constam no DESCRIPTION do pacote.\nO pacote tools, que faz parte da base do R, oferece uma função para busca de dependências de pacotes. Inclusive existe a opção de recursividade, ou seja, busca também as dependências das dependências do pacote desejado.\n\ntools::package_dependencies('dplyr')\n\n$dplyr\n [1] \"cli\"        \"generics\"   \"glue\"       \"lifecycle\"  \"magrittr\"  \n [6] \"methods\"    \"pillar\"     \"R6\"         \"rlang\"      \"tibble\"    \n[11] \"tidyselect\" \"utils\"      \"vctrs\"     \n\ntools::package_dependencies('dplyr', recursive = T)\n\n$dplyr\n [1] \"cli\"        \"generics\"   \"glue\"       \"lifecycle\"  \"magrittr\"  \n [6] \"methods\"    \"pillar\"     \"R6\"         \"rlang\"      \"tibble\"    \n[11] \"tidyselect\" \"utils\"      \"vctrs\"      \"fansi\"      \"utf8\"      \n[16] \"pkgconfig\"  \"withr\"      \"grDevices\"  \"graphics\"   \"stats\""
  },
  {
    "objectID": "pacotes.html#instalação-de-pacotes",
    "href": "pacotes.html#instalação-de-pacotes",
    "title": "4  Pacotes",
    "section": "4.6 Instalação de Pacotes",
    "text": "4.6 Instalação de Pacotes\nPara efetuar a instalação de pacotes usa-se a função install.packages. Os pacotes podem ser instalados diretamente de repositórios na Internet (como o CRAN) ou de arquivos locais.\n\nÚltima atualização: 08/08/2023 - 18:50:25"
  },
  {
    "objectID": "ambientes.html#global-env",
    "href": "ambientes.html#global-env",
    "title": "5  Ambientes",
    "section": "5.1 Global Env",
    "text": "5.1 Global Env\nO Global Env é o ambiente “atual” do usuário. É nele que ficam armazenadas, por padrão, as funções criadas pelos usuários por exemplo. Ele pode ser “visualizado” com os comandos abaixo:\n\nglobalenv()\n\n<environment: R_GlobalEnv>\n\n.GlobalEnv\n\n<environment: R_GlobalEnv>\n\n\nOs objetos presentes no almbiente desejado podem ser visualizados com a função ls.\n\nvariavel <- 5\nls(globalenv())\n\n[1] \"variavel\"\n\nls()\n\n[1] \"variavel\""
  },
  {
    "objectID": "ambientes.html#ambiente-de-pacotes",
    "href": "ambientes.html#ambiente-de-pacotes",
    "title": "5  Ambientes",
    "section": "5.2 Ambiente de Pacotes",
    "text": "5.2 Ambiente de Pacotes\nOs pacotes também possuem ambientes e podemos listar seu “conteúdo” com a função ls. Abaixo usando ls para mostrar os 10 primeiros elementos presentes no ambiente do pacote data.table.\n\nlibrary(data.table)\nas.environment(\"package:data.table\")\n\n<environment: package:data.table>\nattr(,\"name\")\n[1] \"package:data.table\"\nattr(,\"path\")\n[1] \"C:/Users/luisg/AppData/Local/R/win-library/4.3/data.table\"\n\nls(as.environment('package:data.table'))[1:10]\n\n [1] \"%between%\"     \"%chin%\"        \"%flike%\"       \"%ilike%\"      \n [5] \"%inrange%\"     \"%like%\"        \":=\"            \"address\"      \n [9] \"alloc.col\"     \"as.data.table\""
  },
  {
    "objectID": "ambientes.html#ambientes-pai",
    "href": "ambientes.html#ambientes-pai",
    "title": "5  Ambientes",
    "section": "5.3 Ambientes “Pai”",
    "text": "5.3 Ambientes “Pai”\nCada ambiente possui um ambiente de nível superior associado, com exceção do R_EmptyEnv.\n\n# Ambiente superior ao GlobalEnv\nparent.env(.GlobalEnv)\n\n<environment: package:data.table>\nattr(,\"name\")\n[1] \"package:data.table\"\nattr(,\"path\")\n[1] \"C:/Users/luisg/AppData/Local/R/win-library/4.3/data.table\"\n\n# Ambiente superior ao do apcote stats e base\nparent.env(as.environment(\"package:stats\"))\n\n<environment: package:graphics>\nattr(,\"name\")\n[1] \"package:graphics\"\nattr(,\"path\")\n[1] \"C:/Program Files/R/R-4.3.0/library/graphics\"\n\nparent.env(as.environment(\"package:base\"))\n\n<environment: R_EmptyEnv>\n\n\n\n5.3.1 Buscar Ambiente Pai (Recursivamente)\nAbaixo função que busca recursivamente os ambientes e seus ‘pais’ até que se chege no ‘último’ ambiente, o R_EmptyEnv.\n\nbuscar_envs_pai <- function(ambiente, nivel = 1){\n \n    if(environmentName(ambiente)==\"R_EmptyEnv\"){\n    return ('Ambiente informado é R_EmptyEnv. Fim da busca.')\n    }\n    \n    marcacao <- ''\n    for (i in 1:nivel){\n      \n      marcacao <- paste0(' ', marcacao)\n    }\n    \n    writeLines(paste0(marcacao, '|-- ', environmentName(parent.env(ambiente))))\n\n    nivel <- nivel + 1\n    buscar_envs_pai(parent.env(ambiente), nivel = nivel)\n\n}\nbuscar_envs_pai(globalenv())\n\n |-- package:data.table\n  |-- tools:quarto\n   |-- tools:quarto\n    |-- package:stats\n     |-- package:graphics\n      |-- package:grDevices\n       |-- package:utils\n        |-- package:datasets\n         |-- package:methods\n          |-- Autoloads\n           |-- base\n            |-- R_EmptyEnv\n\n\n[1] \"Ambiente informado é R_EmptyEnv. Fim da busca.\""
  },
  {
    "objectID": "ambientes.html#criando-ambientes",
    "href": "ambientes.html#criando-ambientes",
    "title": "5  Ambientes",
    "section": "5.4 Criando Ambientes",
    "text": "5.4 Criando Ambientes\nEm R é possível que se faça a criação de novos ambientes.\n\namb1 <- new.env()\n\namb1\n\n<environment: 0x00000285b684b458>\n\nparent.env(amb1)\n\n<environment: R_GlobalEnv>\n\n\nObjetos criados dentro de um ambiente podem ser acessados através do operador $ após o nome do ambiente. Também é possível utilizar a função ls com o nome do ambiente desejado para que sejam listados seus objetos.\n\n# Objeto x do amb1\namb1$x <- 10\namb1$y <- 99\n\n# Objeto x do GlobalEnv\nx <- 15\n\nx\n\n[1] 15\n\namb1$x\n\n[1] 10\n\nls(amb1)\n\n[1] \"x\" \"y\"\n\namb1$x * amb1$y\n\n[1] 990\n\n\n\nGrolemund (2014)\nDowle e Srinivasan (2023)\nMastropietro (2019)\nÚltima atualização: 08/08/2023 - 18:52:32\n\n\n\n\nDowle, Matt, e Arun Srinivasan. 2023. data.table: Extension of ‘data.frame‘.\n\n\nGrolemund, Garrett. 2014. Hands-On Programming with R. O’Reilly. https://rstudio-education.github.io/hopr/.\n\n\nMastropietro, Daniel. 2019. \"Getting an environment’s name in R: the envnames package\". 2019. https://www.r-bloggers.com/2019/05/getting-an-environments-name-in-r-the-envnames-package."
  },
  {
    "objectID": "funcoes.html#criando-funções",
    "href": "funcoes.html#criando-funções",
    "title": "6  Funções",
    "section": "6.1 Criando Funções",
    "text": "6.1 Criando Funções\nFunções podem ser criadas através do comando function.\n\nfuncao_somar <- function(param1, param2) {\n  param1 + param2\n}\n\nfuncao_somar(5, 8)\n\n[1] 13\n\n\nPara visualizar o código de uma função podemos usar seu nome sem os parênteses.\n\nfuncao_somar\n\nfunction(param1, param2) {\n  param1 + param2\n}"
  },
  {
    "objectID": "funcoes.html#função-x-ambiente",
    "href": "funcoes.html#função-x-ambiente",
    "title": "6  Funções",
    "section": "6.2 Função x Ambiente",
    "text": "6.2 Função x Ambiente\nAs funções possuem seus próprios ambientes. Abaixo uma função criada para exibir seu ambiente e seu ambiente ‘pai’.\n\nfuncao_exibir_envs <- function() {\n  print('Ambiente atual:')\n  print(environment())\n  \n  print(paste(\n    'Ambiente Pai:', \n    environmentName(parent.env(environment()\n                               ))))\n}\n\nfuncao_exibir_envs()\n\n[1] \"Ambiente atual:\"\n<environment: 0x000001dac9433140>\n[1] \"Ambiente Pai: R_GlobalEnv\"\n\n\n\n6.2.1 Objetos no Ambiente da Função\nObjetos que são criados dentro de uma função existem apenas dentro do ambiente desta função. Abaixo um exemplo de variável criada dentro do ambiente da função e que não é acessível no GlobalEnv.\n\nfuncao_teste <- function(){\n  y <- 15\n  x <- 80\n  ls()\n}\n\nfuncao_teste()\n\n[1] \"x\" \"y\"\n\ny\n\nError in eval(expr, envir, enclos): objeto 'y' não encontrado\n\n\nObjetos que existam no ambiente corrente não são alterados caso por estarem dentro do ambiente de fuma função. A variável x é inicializada com valor 10 no ambiente corrente. Ela pode ser acessada pela função memso não sendo informada em algum argumento.\n\nx <- 10\n\nfuncao_teste2 <- function(){\n  y <- 15\n  x + y\n}\n\nfuncao_teste2()\n\n[1] 25\n\ny\n\nError in eval(expr, envir, enclos): objeto 'y' não encontrado\n\nx\n\n[1] 10\n\n\nEntretando, caso a variável x seja alterada no ambiente da função ela não é alterada no ambiente corrente.\n\nx <- 10\n\nfuncao_teste3 <- function(){\n  y <- 15\n  x <- 80\n  x + y\n}\n\nfuncao_teste3()\n\n[1] 95\n\nx\n\n[1] 10\n\n\n\n6.2.1.1 Operador <<-\nUsando o operador de atribuição <<- é possível alterar objetos que estejam fora do ambiente de uma função. Neste caso a variável x é atualizada no Environment que está acima do Environment da função. A variável y continua não existindo fora da função, porém agora a variável x é atualizada tanto no ambiente da função como no ambiente acima deste.\n\nls(envir = globalenv())\n\n[1] \"funcao_exibir_envs\" \"funcao_somar\"       \"funcao_teste\"      \n[4] \"funcao_teste2\"      \"funcao_teste3\"      \"x\"                 \n\nx\n\n[1] 10\n\nfuncao_teste4 <- function(){\n  y <- 15\n  x <<- 80\n  x + y\n}\n\nfuncao_teste4()\n\n[1] 95\n\ny\n\nError in eval(expr, envir, enclos): objeto 'y' não encontrado\n\nx\n\n[1] 80\n\n\nApesar de, neste caso, produzirem o mesmo retorno, as funções funcao_teste3 e funcao_teste4 impactam de formas distintas o ambiente do R.\n\nGrolemund (2014)\nÚltima atualização: 10/08/2023 - 22:14:44\n\n\n\n\nGrolemund, Garrett. 2014. Hands-On Programming with R. O’Reilly. https://rstudio-education.github.io/hopr/."
  },
  {
    "objectID": "intro_rstudio.html#o-que-é-o-rstudio",
    "href": "intro_rstudio.html#o-que-é-o-rstudio",
    "title": "RStudio",
    "section": "O que é o RStudio?",
    "text": "O que é o RStudio?\nO RStudio é um IDE (Integrated Development Environment) criado pela Posit para as linguagens R e Python. Apesar de não ser necessário para uilização de R, o RStudio fornece muitas funcionalidades para programação. Nesta seção serão apresentados alguns de seus principais recursos.\n\n\n\n\n\nFigura 1: RStudio - Tela inicial\n\n\n\n\n\n\n\n\n\nFigura 2: About RStudio\n\n\n\n\n\nRStudio - User Guide\nIDE\nÚltima atualização: 06/08/2023 - 11:09:51"
  },
  {
    "objectID": "rstudio_layout.html#console",
    "href": "rstudio_layout.html#console",
    "title": "7  Layout",
    "section": "7.1 Console",
    "text": "7.1 Console\nNeste painel está embutido o R propriamente dito.\n\n\n\n\n\nFigura 7.1: Console"
  },
  {
    "objectID": "rstudio_layout.html#output",
    "href": "rstudio_layout.html#output",
    "title": "7  Layout",
    "section": "7.2 Output",
    "text": "7.2 Output\nPainel com diversas saídas fornecidas. Gráficos (Plots), Estrutura de Pastas(Files), Ajuda (Help), Pacotes(Packages), etc aparecem neste painel. Este é um painel muito útil para navegação nos arquivos do projeto e visualização/exportação de gráficos.\n\n\n\n\n\nFigura 7.2: Files"
  },
  {
    "objectID": "rstudio_layout.html#environment",
    "href": "rstudio_layout.html#environment",
    "title": "7  Layout",
    "section": "7.3 Environment",
    "text": "7.3 Environment\nApresenta os objetos criados no ambiente do R.\n\n\n\n\n\nFigura 7.3: Environment"
  },
  {
    "objectID": "rstudio_layout.html#source",
    "href": "rstudio_layout.html#source",
    "title": "7  Layout",
    "section": "7.4 Source",
    "text": "7.4 Source\nAqui são abertos os arquivos de códigos (scripts, Rmarkdown, Quarto, SQL, etc).\n\n\n\n\n\nFigura 7.4: Source\n\n\n\n\n\nRStudio - User Guide\nIDE\nÚltima atualização: 06/08/2023 - 11:11:54"
  },
  {
    "objectID": "rstudio_tools.html#install-packages",
    "href": "rstudio_tools.html#install-packages",
    "title": "8  Menu Tools",
    "section": "8.1 Install Packages",
    "text": "8.1 Install Packages\nNesta opção é aberta a janela para instalação de pacotes.\n\n\n\n\n\nFigura 8.2: Install Packages\n\n\n\n\n\nInstall From: local de busca dos pacotes a serem instalados\n\nRepository: repositório configurado\n\nPackages: nome dos pacotes a serem instalados. Podem ser escolhidos múltiplos pacotes, devendo ser separados por espaço ou vírgula\n\nPackage Archive File: opção para busca de arquivo a partir da máquina do usuário. Esta opção habilita botão para busca do pacote\n\nPackage archive: arquivo do pacote a ser instalado\n\n\n\n\n\n\n\n\nFigura 8.3: Install From\n\n\n\n\n\n\n\n\n\nFigura 8.4: Package Archive File\n\n\n\n\n\nInstall to Library: pasta de instalação dos pacotes\nInstall Dependencies: marcação para que seja feita instalação de dependências dos pacotes selecionados."
  },
  {
    "objectID": "rstudio_tools.html#check-for-package-updates",
    "href": "rstudio_tools.html#check-for-package-updates",
    "title": "8  Menu Tools",
    "section": "8.2 Check for Package Updates",
    "text": "8.2 Check for Package Updates\nEste opção abre a janela Update Packages, permitindo visualizar quais pacotes possuem versões mais recentes. A coluna NEWS possibilita visualizar o arquivo com dados de atuializações feitas no pacote.\n\n\n\n\n\nFigura 8.5: Check for Package Updates"
  },
  {
    "objectID": "rstudio_tools.html#version-control",
    "href": "rstudio_tools.html#version-control",
    "title": "8  Menu Tools",
    "section": "8.3 Version Control",
    "text": "8.3 Version Control\nOferece opção de controle de versões de código através do Git ou SVN."
  },
  {
    "objectID": "rstudio_tools.html#terminal",
    "href": "rstudio_tools.html#terminal",
    "title": "8  Menu Tools",
    "section": "8.4 Terminal",
    "text": "8.4 Terminal\nPermite acesso ao terminal do sistema operacional a partir do RStudio."
  },
  {
    "objectID": "rstudio_tools.html#background-jobs",
    "href": "rstudio_tools.html#background-jobs",
    "title": "8  Menu Tools",
    "section": "8.5 Background Jobs",
    "text": "8.5 Background Jobs\nFornece opções para execução de ‘Jobs’, basicamente scripts em R, em outra instância do R. Desta forma a sessão aberta no RStudio não fica ocupada e permite que o usuário continue seu trabalho. Esta opção é muito útil para processamentos mais demorados."
  },
  {
    "objectID": "rstudio_tools.html#global-options",
    "href": "rstudio_tools.html#global-options",
    "title": "8  Menu Tools",
    "section": "8.6 Global Options",
    "text": "8.6 Global Options\nEsta opção abre a janela Options do RStudio onde podem ser feitas as principais configurações de comportamento da ferramenta.\n\n\n\n\n\nFigura 8.6: Global Options\n\n\n\n\n\nRStudio - User Guide\nIDE\nÚltima atualização: 08/08/2023 - 18:46:43"
  },
  {
    "objectID": "intro_cd.html",
    "href": "intro_cd.html",
    "title": "Ciência de Dados",
    "section": "",
    "text": "Segundo Provost e Fawcett (Provost e Fawcett 2016, p 3) ‘data science é um conjunto de princípios fundamentais que norteiam a extração de conhecimentos a partir de dados’.\nUma definição da IBM (2023) para Ciência de Dados:\n‘A ciência de dados combina matemática e estatística, programação especializada, análise avançada, inteligência artificial (IA) e aprendizado de máquina com conhecimento em domínio específico para revelar insights acionáveis ocultos nos dados de uma organização’.\nUma definição mais sucinta da AWS (2023):\n‘A ciência de dados é o estudo dos dados para extrair insights significativos para os negócios’.\n\nÚltima atualização: 11/08/2023 - 23:21:41\n\n\n\n\nAWS. 2023. \"O que é ciência de dados?\" 2023. https://aws.amazon.com/pt/what-is/data-science/.\n\n\nIBM. 2023. \"What is data science?\" 2023. https://www.ibm.com/topics/data-science.\n\n\nProvost, Foster, e Tom Fawcett. 2016. DataScience para Negócios. Alta Books."
  },
  {
    "objectID": "vies_var.html",
    "href": "vies_var.html",
    "title": "9  Trade-Off Viés x Variância",
    "section": "",
    "text": "⚖️\n\nÚltima atualização: 21/06/2023 - 21:35:24"
  },
  {
    "objectID": "referencias.html",
    "href": "referencias.html",
    "title": "Referências",
    "section": "",
    "text": "AWS. 2023. “O Que é Ciência de Dados?” 2023. https://aws.amazon.com/pt/what-is/data-science/.\n\n\nDowle, Matt, and Arun Srinivasan. 2023. Data.table: Extension of\n‘Data.frame‘.\n\n\nGrolemund, Garrett. 2014. Hands-on Programming with r.\nO’Reilly. https://rstudio-education.github.io/hopr/.\n\n\nIBM. 2023. “What Is Data Science?” 2023. https://www.ibm.com/topics/data-science.\n\n\nMastropietro, Daniel. 2019. “Getting an Environment’s Name in r:\nThe Envnames Package.” 2019. https://www.r-bloggers.com/2019/05/getting-an-environments-name-in-r-the-envnames-package.\n\n\nProvost, Foster, and Tom Fawcett. 2016. DataScience Para\nNegócios. Alta Books.\n\n\nTeam, R Core. 2023a. An Introduction to r. R Foundation for\nStatistical Computing. https://cran.r-project.org/doc/manuals/r-release/R-intro.html.\n\n\n———. 2023b. R Language Definition. R Foundation for Statistical\nComputing. https://cran.r-project.org/doc/manuals/r-release/R-lang.html.\n\n\n———. 2023c. R: A Language and Environment for Statistical\nComputing. Vienna, Austria: R Foundation for Statistical Computing.\nhttps://www.R-project.org/.\n\n\nWikipedia, the free encyclopedia. 2023. “Naming Convention\n(Programming).” 2023. https://en.wikipedia.org/wiki/Naming_convention_(programming)."
  }
]