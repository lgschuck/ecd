[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "eRando em Ciênc1a de D4do$",
    "section": "",
    "text": "Bem Vindo\nEste é um livro sobre a utilização da linguagem R em Ciência de Dados.\nEste material é um projeto pessoal usado como fonte de consulta e aprendizado, sem compromisso com uma estrutura específica.\nMuitas vezes o exposto aqui é a prática (para fixação e exploração) de conceitos apresentados em outros materiais. Assim todas as fontes utilizadas, mesmo que de forma subjetiva, são citadas.\n\n\nVersão do R\nA versão do R utilizada é a 4.3.0.\n\nDates and Times in R\nÚltima atualização: 28/04/2023 - 21:08:56"
  },
  {
    "objectID": "intro.html#linguagem-r",
    "href": "intro.html#linguagem-r",
    "title": "1  Introdução",
    "section": "1.1 Linguagem R",
    "text": "1.1 Linguagem R\nConforme o site r-project.org o R ’é um ambiente de software livre para computação estatística e gráficos’¹. R é distribuída sob a licença GPLv2 e é mantida pela R Foundation. Atualmente, 2023, é uma das linguagens mais buscadas no Google como pode ser visto pelo PYPL.\n  \nVocê pode encontrar uma infinidade de sites com conteúdo sobre R, abaixo alguns com conteúdos muito ricos:\n\nhttps://www.datacamp.com/\nhttps://statisticsglobe.com/\nhttps://r-charts.com/\nhttp://www.sthda.com/english/\nhttps://r4ds.hadley.nz/\nhttps://rstudio.github.io/r-manuals/\nhttps://www.bigbookofr.com/"
  },
  {
    "objectID": "intro.html#ciência-de-dados",
    "href": "intro.html#ciência-de-dados",
    "title": "1  Introdução",
    "section": "1.2 Ciência de Dados",
    "text": "1.2 Ciência de Dados\nUma definição da IBM para Ciência de Dados:\n’A ciência de dados combina matemática e estatística, programação especializada, análise avançada, inteligência artificial (IA) e aprendizado de máquina com conhecimento em domínio específico para revelar insights acionáveis ocultos nos dados de uma organização’².\nUma definição mais sucinta da AWS:\n’A ciência de dados é o estudo dos dados para extrair insights significativos para os negócios’³.\n\nTraduções feitas com auxílio do Google Tradutor\n¹ https://www.r-project.org/\n² https://www.ibm.com/cloud/learn/data-science-introduction\n³ https://aws.amazon.com/pt/what-is/data-science/\nÚltima atualização: 01/05/2023 - 12:53:14"
  },
  {
    "objectID": "rstudio.html#o-que-é-o-rstudio",
    "href": "rstudio.html#o-que-é-o-rstudio",
    "title": "2  RStudio",
    "section": "2.1 O que é o RStudio",
    "text": "2.1 O que é o RStudio\nO RStudio é um IDE (Integrated Development Environment) criado pela Posit para as linguagens R e Python. O RStudio fornece muitas funcionalidades para programação em R. Neste capítulo serão apresentadas algumas das principais funcionalidades.\n\n\n\n\n\n\n\n\n\n\n\n2.1.1 Layout\nO RStudio possui basicamente 4 painéis dimensionáveis. Cada um destes painéis pode trazer uma série de abas.\n\nConsole: neste painel está embutido o R propriamente dito.\n\n\n\n\n\n\n\nFiles: estrutura de pastas do sistema.\n\n\n\n\n\n\n\nEnvironment: apresenta os objetos criados no ambiente do R.\n\n\n\n\n\n\n\nSource: aqui são abertos os arquivos de códigos (scripts, Rmarkdown, Quarto, SQL, etc).\n\n\n\n\n\n\n\nRStudio\nIDE\nÚltima atualização: 28/04/2023 - 21:38:39`"
  },
  {
    "objectID": "nomes.html#nomes",
    "href": "nomes.html#nomes",
    "title": "3  Nomeando Objetos",
    "section": "3.1 Nomes",
    "text": "3.1 Nomes\nA linguagem R aceita muitas possibilidades para nomeação de objetos. Inclusive podem ser criados objetos com espaços em seus nomes, entretanto devem ser referenciados usando sinal de crase (backticks).\n\nx <- 10\n\n.x <- 10\n\n`nome com espaco` <- 55\n\n\n3.1.1 Caracteres ‘Proibidos’\nAlguns caracteres não podem ser usados em nomes de objetos e nomes de objetos não podem começar por números. Números podem ser usados após primeiro caractere.\n\nx@ <- 10  # Error: unexpected assignment in ...\nx! <- 10  # Error: unexpected assignment in ...\nx& <- 10  # Error: unexpected assignment in ...\n55x <- 10 # Error: unexpected assignment in ...\n\n\nx55x <- 888\n\nx55x\n\n[1] 888\n\n\nEntretanto utilizando os nomes com aspas ou crases é possível ‘burlar’ estas limitações.\n\n`55 teste $@-#-$` <- 123456\n\n`55 teste $@-#-$`\n\n[1] 123456"
  },
  {
    "objectID": "nomes.html#case-sensitive",
    "href": "nomes.html#case-sensitive",
    "title": "3  Nomeando Objetos",
    "section": "3.2 Case Sensitive",
    "text": "3.2 Case Sensitive\nR é uma linguagemn case sensitive, ou seja, ela diferencia maíusculas de minúsculas. Assim um objeto com nome de Teste é difrente de teste ou tesTe ou TESTE…\n\nteste <- 10\nTeste <- 15\ntesTe <- 20\nTESTE <- 25\n\nls()\n\n[1] \"55 teste $@-#-$\" \"nome com espaco\" \"teste\"           \"tesTe\"          \n[5] \"Teste\"           \"TESTE\"           \"x\"               \"x55x\""
  },
  {
    "objectID": "nomes.html#convenções",
    "href": "nomes.html#convenções",
    "title": "3  Nomeando Objetos",
    "section": "3.3 Convenções",
    "text": "3.3 Convenções\nConforme o seu código em R (e outra linguagem qualquer) for crescendo você perceberá rapidamente a necessidade de identificar de forma facilitada os objetos criados. Assim, é muito interessante a utilização de alguma convenção para facilitar sua vida. Existem diversas delas, como camelCase, snake_case, etc.\nUm bom guia é o The tidyverse style guide. Tenha sempre em mente que sue código deve ser lido com facilidade no futuro, seja ele próximo ou distante.\n\n# camelCase\nobjetoTeste <- 'Teste Camel Case'\n\n# snake_case\nobjeto_teste <- 'Teste snake_case'\n\n\nHands-On Programming with R, especialmente capítulo 2 - The Very Basics\nR Manuals :: An Introduction to R - Capítulo 1\nNaming_convention_(programming)\nThe tidyverse style guide\nÚltima atualização: 28/04/2023 - 21:10:22"
  },
  {
    "objectID": "data_frames.html#o-que-são-data-frames",
    "href": "data_frames.html#o-que-são-data-frames",
    "title": "4  Data Frames",
    "section": "4.1 O que são data frames ?",
    "text": "4.1 O que são data frames ?\nConforme o próprio manual do R, data.frame é a estrutura que imita de forma mais próxima um dataset do SAS ou SPSS. De forma resumida um data.frame é uma estrutura tabular com colunas (variáveis, atributos, etc) e registros (casos, observações, instâncias, etc). Diferente de uma matriz um data.frame pode ter diferentes tipos de dados.\nUm data.frame possui todas as colunas com o mesmo tamanho (quantidade de regitros). A classe de um objeto data.frame possui o mesmo nome ‘data.frame’. Abaixo pode ser visualizada a classe do data.frame Iris (muito usado em exemplos em Ciência de Dados) e também as primeiras linhas com o comando head.\n\nclass(iris)\n\n[1] \"data.frame\"\n\nhead(iris)\n\n  Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n1          5.1         3.5          1.4         0.2  setosa\n2          4.9         3.0          1.4         0.2  setosa\n3          4.7         3.2          1.3         0.2  setosa\n4          4.6         3.1          1.5         0.2  setosa\n5          5.0         3.6          1.4         0.2  setosa\n6          5.4         3.9          1.7         0.4  setosa\n\n\n\n4.1.1 Atributos\nOs atributos “padrão” de um data.frame são: names, class e row.names. É possível acessá-los com a função attributes. O atributo names também pode ser obtido com a função names.\n\nattributes(iris)\n\n$names\n[1] \"Sepal.Length\" \"Sepal.Width\"  \"Petal.Length\" \"Petal.Width\"  \"Species\"     \n\n$class\n[1] \"data.frame\"\n\n$row.names\n  [1]   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18\n [19]  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35  36\n [37]  37  38  39  40  41  42  43  44  45  46  47  48  49  50  51  52  53  54\n [55]  55  56  57  58  59  60  61  62  63  64  65  66  67  68  69  70  71  72\n [73]  73  74  75  76  77  78  79  80  81  82  83  84  85  86  87  88  89  90\n [91]  91  92  93  94  95  96  97  98  99 100 101 102 103 104 105 106 107 108\n[109] 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126\n[127] 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144\n[145] 145 146 147 148 149 150\n\nnames(iris)\n\n[1] \"Sepal.Length\" \"Sepal.Width\"  \"Petal.Length\" \"Petal.Width\"  \"Species\"     \n\n\n\n\n4.1.2 Dimensões\nA função dim retorna as dimensões de um data.frame (linhas e colunas). Estes dados também podem ser obtidos com as funções nrow e ncol.\n\ndim(iris)\n\n[1] 150   5\n\nnrow(iris)\n\n[1] 150\n\nncol(iris)\n\n[1] 5\n\n\n\n\n4.1.3 Acessando Dados\n\n4.1.3.1 Índices\nComo a estrutura de um data.frame é organizada em linhas e colunas, podemos acessar os dados utilizando colchetes ([ ]): nome[linha, coluna]. Podem ser usados intervalos de índices com o operador ‘:’.\n\n# Acessar primeira linha e segunda coluna (Sepal.Width)\niris[1,2]\n\n[1] 3.5\n\n# Acessar linhas 1 até 3 e a segunda coluna\niris[1:3, 2]\n\n[1] 3.5 3.0 3.2\n\n\nApesar de ser possível, utilizar o índice faz com que a referência seja relativa, ou seja, a variável ‘1’ pode mudar caso o data.frame seja editado. Por exemplo, caso em algum momento anterior a variável Sepal.Length tenha sido excluída, uma nova variável assumirá o índice 1. Além disto ao se ler o código não fica claro que variável está sendo acessada.\n\n\n4.1.3.2 Nomes\nExistem diversas outras formas para acessar dados de um data.frame, inclusive utilizando o nome da coluna de forma explícita.\n\n# Acessar primeira linha e segunda coluna (pelo nome)\niris[1:3,'Sepal.Width']\n\n[1] 3.5 3.0 3.2\n\n\nUma forma mais comum é utilizando o operador $ para acessar a coluna pelo seu nome.\n\n# Acessar primeira linha e segunda coluna (pelo nome)\niris[1,]$Sepal.Width\n\n[1] 3.5\n\n# Acessar linhas 1 até 3 e a segunda coluna (pelo nome)\niris[1:3,]$Sepal.Width\n\n[1] 3.5 3.0 3.2\n\n\n\n\n4.1.3.3 Filtrando Linhas\nPara acessar linhas que atendam condições específicas pode ser usada a forma abaixo:\n\n# Retorna valores de Speal.Width onde Petal.Length for maior do que 6\niris[iris$Petal.Length > 6,'Sepal.Width']\n\n[1] 3.0 2.9 3.6 3.8 2.6 2.8 2.8 3.8 3.0\n\niris[iris$Petal.Length > 6,]$Sepal.Width\n\n[1] 3.0 2.9 3.6 3.8 2.6 2.8 2.8 3.8 3.0\n\n\n\nR Manuals :: R Language Definition - Capítulo 2\nÚltima atualização: 28/04/2023 - 22:27:57"
  },
  {
    "objectID": "pacotes.html#pacotes-instalados",
    "href": "pacotes.html#pacotes-instalados",
    "title": "5  Pacotes",
    "section": "5.1 Pacotes Instalados",
    "text": "5.1 Pacotes Instalados\n\n# Exibindo 5 primeiros\nas.data.frame(installed.packages())$Package[1:5]\n\n[1] \"base64enc\"  \"bslib\"      \"cachem\"     \"cli\"        \"data.table\""
  },
  {
    "objectID": "pacotes.html#pacotes-disponíveis",
    "href": "pacotes.html#pacotes-disponíveis",
    "title": "5  Pacotes",
    "section": "5.2 Pacotes Disponíveis",
    "text": "5.2 Pacotes Disponíveis\nFunção available.packages procura pacotes diosponíveis no valor informado no argumento repos. Por padrão é buscado de getOption(“repos”).\n\noptions(repos = 'https://cran.rstudio.com/')\n\n# Exibindo 5 primeiros\navailable.packages()[1:5]\n\n[1] \"A3\"            \"AalenJohansen\" \"AATtools\"      \"ABACUS\"       \n[5] \"abbreviate\""
  },
  {
    "objectID": "pacotes.html#dependências-de-pacotes",
    "href": "pacotes.html#dependências-de-pacotes",
    "title": "5  Pacotes",
    "section": "5.3 Dependências de Pacotes",
    "text": "5.3 Dependências de Pacotes\nO pacote tools oferece função para busca de dependências de pacotes. Inclusive oferecendo a opção de recursividade.\n\ntools::package_dependencies('dplyr')\n\n$dplyr\n [1] \"cli\"        \"generics\"   \"glue\"       \"lifecycle\"  \"magrittr\"  \n [6] \"methods\"    \"pillar\"     \"R6\"         \"rlang\"      \"tibble\"    \n[11] \"tidyselect\" \"utils\"      \"vctrs\"     \n\ntools::package_dependencies('dplyr', recursive = T)\n\n$dplyr\n [1] \"cli\"        \"generics\"   \"glue\"       \"lifecycle\"  \"magrittr\"  \n [6] \"methods\"    \"pillar\"     \"R6\"         \"rlang\"      \"tibble\"    \n[11] \"tidyselect\" \"utils\"      \"vctrs\"      \"fansi\"      \"utf8\"      \n[16] \"pkgconfig\"  \"withr\"      \"grDevices\"  \"graphics\"   \"stats\""
  },
  {
    "objectID": "pacotes.html#pasta-de-instalação",
    "href": "pacotes.html#pasta-de-instalação",
    "title": "5  Pacotes",
    "section": "5.4 Pasta de Instalação",
    "text": "5.4 Pasta de Instalação\nO R possui pastas de instalação dos pacotes. Para visualizá-las basta usar o comando .libPaths.\n\n.libPaths()\n\n[1] \"C:/Users/luisg/AppData/Local/R/win-library/4.3\"\n[2] \"C:/Program Files/R/R-4.3.0/library\"            \n\nlist.files(.libPaths()[1])\n\n [1] \"base64enc\"   \"bslib\"       \"cachem\"      \"cli\"         \"data.table\" \n [6] \"digest\"      \"ellipsis\"    \"evaluate\"    \"fastmap\"     \"fontawesome\"\n[11] \"fs\"          \"ftools\"      \"glue\"        \"highr\"       \"htmltools\"  \n[16] \"jquerylib\"   \"jsonlite\"    \"knitr\"       \"lifecycle\"   \"magrittr\"   \n[21] \"memoise\"     \"mime\"        \"R6\"          \"rappdirs\"    \"rlang\"      \n[26] \"rmarkdown\"   \"sass\"        \"stringi\"     \"stringr\"     \"tinytex\"    \n[31] \"vctrs\"       \"xfun\"        \"yaml\"       \n\nlist.files(.libPaths()[2])\n\n [1] \"base\"         \"boot\"         \"class\"        \"cluster\"      \"codetools\"   \n [6] \"compiler\"     \"datasets\"     \"foreign\"      \"graphics\"     \"grDevices\"   \n[11] \"grid\"         \"KernSmooth\"   \"lattice\"      \"MASS\"         \"Matrix\"      \n[16] \"methods\"      \"mgcv\"         \"nlme\"         \"nnet\"         \"parallel\"    \n[21] \"rpart\"        \"spatial\"      \"splines\"      \"stats\"        \"stats4\"      \n[26] \"survival\"     \"tcltk\"        \"tools\"        \"translations\" \"utils\"       \n\n\nA pasta padrão de instalação já possui diversos pacotes que foram instalados junto com o R, estes fazem parte dos pacotes “básicos” e os recomendados. Com o comando installed.packages é possível buscar estas informações. Abaixo, a função head exibe as primeiras linhas, no caso n = 1, e a função t transpõe o o data.frame de colunas para linhas. Foram usadas para simplificar a visualização.\n\npacotes <- as.data.frame(installed.packages())\n\n# pacote base\nt(head(pacotes[pacotes$Package =='base',], n = 1))\n\n                      base                                \nPackage               \"base\"                              \nLibPath               \"C:/Program Files/R/R-4.3.0/library\"\nVersion               \"4.3.0\"                             \nPriority              \"base\"                              \nDepends               NA                                  \nImports               NA                                  \nLinkingTo             NA                                  \nSuggests              \"methods\"                           \nEnhances              NA                                  \nLicense               \"Part of R 4.3.0\"                   \nLicense_is_FOSS       NA                                  \nLicense_restricts_use NA                                  \nOS_type               NA                                  \nMD5sum                NA                                  \nNeedsCompilation      NA                                  \nBuilt                 \"4.3.0\"                             \n\n# pacote MASS\nt(head(pacotes[pacotes$Package =='MASS',], n = 1))\n\n                      MASS                                             \nPackage               \"MASS\"                                           \nLibPath               \"C:/Program Files/R/R-4.3.0/library\"             \nVersion               \"7.3-58.4\"                                       \nPriority              \"recommended\"                                    \nDepends               \"R (>= 4.3.0), grDevices, graphics, stats, utils\"\nImports               \"methods\"                                        \nLinkingTo             NA                                               \nSuggests              \"lattice, nlme, nnet, survival\"                  \nEnhances              NA                                               \nLicense               \"GPL-2 | GPL-3\"                                  \nLicense_is_FOSS       NA                                               \nLicense_restricts_use NA                                               \nOS_type               NA                                               \nMD5sum                NA                                               \nNeedsCompilation      \"yes\"                                            \nBuilt                 \"4.3.0\"                                          \n\n# pacote data.table\nt(head(pacotes[pacotes$Package =='data.table',], n = 1))\n\n                      data.table                                                                                               \nPackage               \"data.table\"                                                                                             \nLibPath               \"C:/Users/luisg/AppData/Local/R/win-library/4.3\"                                                         \nVersion               \"1.14.8\"                                                                                                 \nPriority              NA                                                                                                       \nDepends               \"R (>= 3.1.0)\"                                                                                           \nImports               \"methods\"                                                                                                \nLinkingTo             NA                                                                                                       \nSuggests              \"bit64 (>= 4.0.0), bit (>= 4.0.4), curl, R.utils, xts,\\nnanotime, zoo (>= 1.8-1), yaml, knitr, rmarkdown\"\nEnhances              NA                                                                                                       \nLicense               \"MPL-2.0 | file LICENSE\"                                                                                 \nLicense_is_FOSS       NA                                                                                                       \nLicense_restricts_use NA                                                                                                       \nOS_type               NA                                                                                                       \nMD5sum                NA                                                                                                       \nNeedsCompilation      \"yes\"                                                                                                    \nBuilt                 \"4.3.0\"                                                                                                  \n\n\nPode ser visto no campo Priority que o pacote base é “base”, isto significa que este faz parte da instalação do R. Já o pacote MASS, por exemplo, é um pacote recomendado. O pacote data.table, um pacote “normal”, não possui informação no campo Priority.\n\nÚltima atualização: 01/05/2023 - 12:08:08"
  },
  {
    "objectID": "ambientes.html#global-env",
    "href": "ambientes.html#global-env",
    "title": "6  Ambientes",
    "section": "6.1 Global Env",
    "text": "6.1 Global Env\nO Global Env é o ambiente “atual” do usuário. É nele que ficam armazenadas, por padrão, as funções criadas pelos usuários. Ele pode ser “visualizado” com os comandos abaixo:\n\nglobalenv()\n\n<environment: R_GlobalEnv>\n\n.GlobalEnv\n\n<environment: R_GlobalEnv>\n\n\nPodemos visualizar os objetos presentes no ambiente desejado com a função ls.\n\nvariavel <- 5\nls(globalenv())\n\n[1] \"variavel\"\n\nls()\n\n[1] \"variavel\""
  },
  {
    "objectID": "ambientes.html#ambiente-de-pacotes",
    "href": "ambientes.html#ambiente-de-pacotes",
    "title": "6  Ambientes",
    "section": "6.2 Ambiente de Pacotes",
    "text": "6.2 Ambiente de Pacotes\nOs pacotes também possuem ambientes e podemos listar seu “conteúdo” com a função ls. Abaixo usando ls para mostrar os 10 primeiros elementos presentes no ambiente do pacote data.table.\n\nlibrary(data.table)\nas.environment(\"package:data.table\")\n\n<environment: package:data.table>\nattr(,\"name\")\n[1] \"package:data.table\"\nattr(,\"path\")\n[1] \"C:/Users/luisg/AppData/Local/R/win-library/4.3/data.table\"\n\nls(as.environment('package:data.table'))[1:10]\n\n [1] \"%between%\"     \"%chin%\"        \"%flike%\"       \"%ilike%\"      \n [5] \"%inrange%\"     \"%like%\"        \":=\"            \"address\"      \n [9] \"alloc.col\"     \"as.data.table\""
  },
  {
    "objectID": "ambientes.html#ambientes-pai",
    "href": "ambientes.html#ambientes-pai",
    "title": "6  Ambientes",
    "section": "6.3 Ambientes “Pai”",
    "text": "6.3 Ambientes “Pai”\n\nparent.env(.GlobalEnv)\n\n<environment: package:data.table>\nattr(,\"name\")\n[1] \"package:data.table\"\nattr(,\"path\")\n[1] \"C:/Users/luisg/AppData/Local/R/win-library/4.3/data.table\"\n\nparent.env(as.environment(\"package:stats\"))\n\n<environment: package:graphics>\nattr(,\"name\")\n[1] \"package:graphics\"\nattr(,\"path\")\n[1] \"C:/Program Files/R/R-4.3.0/library/graphics\"\n\nparent.env(as.environment(\"package:base\"))\n\n<environment: R_EmptyEnv>\n\n\n\n6.3.1 Buscar Ambiente Pai (Recursivamente)\n\nbuscar_envs_pai <- function(ambiente, nivel = 1){\n \n    if(environmentName(ambiente)==\"R_EmptyEnv\"){\n    return ('Ambiente informado é R_EmptyEnv. Fim da busca.')\n    }\n    \n    marcacao <- ''\n    for (i in 1:nivel){\n      \n      marcacao <- paste0(' ', marcacao)\n    }\n    \n    writeLines(paste0(marcacao, '|-- ', environmentName(parent.env(ambiente))))\n\n    nivel <- nivel + 1\n    buscar_envs_pai(parent.env(ambiente), nivel = nivel)\n\n}\nbuscar_envs_pai(globalenv())\n\n |-- package:data.table\n  |-- tools:quarto\n   |-- tools:quarto\n    |-- package:stats\n     |-- package:graphics\n      |-- package:grDevices\n       |-- package:utils\n        |-- package:datasets\n         |-- package:methods\n          |-- Autoloads\n           |-- base\n            |-- R_EmptyEnv\n\n\n[1] \"Ambiente informado é R_EmptyEnv. Fim da busca.\""
  },
  {
    "objectID": "ambientes.html#criando-ambientes",
    "href": "ambientes.html#criando-ambientes",
    "title": "6  Ambientes",
    "section": "6.4 Criando Ambientes",
    "text": "6.4 Criando Ambientes\n\namb1 <- new.env()\n\namb1\n\n<environment: 0x000001e2aa799a80>\n\nparent.env(amb1)\n\n<environment: R_GlobalEnv>\n\namb1$x <- 10\n\nx <- 15\n\nx\n\n[1] 15\n\namb1$x\n\n[1] 10\n\n\n\nHands-On Programming with R, especialmente capítulo 8 - Environments\ndata.table\nR-Bloggers - Environments Name\nÚltima atualização: 28/04/2023 - 21:11:03"
  },
  {
    "objectID": "funcoes.html#função-x-ambiente",
    "href": "funcoes.html#função-x-ambiente",
    "title": "7  Funções",
    "section": "7.1 Função x Ambiente",
    "text": "7.1 Função x Ambiente\n\nfuncao_exibir_envs <- function(){\n  print('Ambiente atual:')\n  print(environment()) \n  \n  print(paste('Ambiente Pai:', environmentName(parent.env(environment()))))\n}\n\nfuncao_exibir_envs()\n\n[1] \"Ambiente atual:\"\n<environment: 0x0000016e98c83728>\n[1] \"Ambiente Pai: R_GlobalEnv\"\n\nfuncao_exibir_envs  \n\nfunction(){\n  print('Ambiente atual:')\n  print(environment()) \n  \n  print(paste('Ambiente Pai:', environmentName(parent.env(environment()))))\n}\n\n\n\nHands-On Programming with R, especialmente capítulo 8 - Environments\nÚltima atualização: 28/04/2023 - 21:11:16"
  },
  {
    "objectID": "referencias.html",
    "href": "referencias.html",
    "title": "Referências",
    "section": "",
    "text": "Em criação."
  }
]