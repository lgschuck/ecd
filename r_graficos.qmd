# GrÃ¡ficos

[Status](convencoes.html#status-do-material) ğŸŸ¨ğŸŸ¨ğŸŸ¨

## IntroduÃ§Ã£o

R oferece uma sÃ©rie de funÃ§Ãµes nativas para criaÃ§Ã£o de grÃ¡ficos. Estas funÃ§Ãµes possuem muitos parÃ¢metros que permitem melhorar visualamente as apreesentaÃ§Ãµes dos grÃ¡ficos.

Abaixo um exemplo de um grÃ¡fico de criado com a funÃ§Ã£o `plot` do pacote **graphics**. Os argumentos `x` e `y` sÃ£o usados nas coordenadas e jÃ¡ sÃ£o suficientes para a geraÃ§Ã£o de um grÃ¡fico.

```{r}
df_mtcars <- mtcars
names(df_mtcars) <- toupper(names(df_mtcars))

plot(x = df_mtcars$HP, y = df_mtcars$MPG)
```

Podemos customizar com diversos parÃ¢metros. Por exemplo `main` Ã© o argumento que define o tÃ­tulo do grÃ¡fico, enquanto que `xlab` e `ylab` sÃ£o os *labels* dos eixos. O argumento `col` define a cor. Note que o R possui muitas cores que podem ser identificadas como *strings*. VocÃª pode ver as disponÃ­veis com a funÃ§Ã£o `colors`.

```{r}
plot(df_mtcars$HP, df_mtcars$MPG, 
     col ='brown3', main = 'GrÃ¡fico HP x MPG', 
     xlab = 'HP', ylab = 'MPG')
```

Veja que o grÃ¡fico foi exibido com pontos para os valores. O parÃ¢metro `type` permite outras opÃ§Ãµes:

-   `p` (padrÃ£o): pontos

-   `l`: linhas

-   `b`: pontos e linhas

-   `c`: pontos 'vazios' ligados por linhas

Obviamente, nem todos os tipos de grÃ¡ficos se enquadram para todos os tipos de dados. Se usarmos um grÃ¡fico de pontos e linhas nos dados do exemplo acima, as linhas nÃ£o farÃ£o muito sentido.

```{r}
plot(df_mtcars$HP, df_mtcars$MPG, 
     type = 'b',
     col ='aquamarine3', main = 'GrÃ¡fico HP x MPG', 
     xlab = 'HP', ylab = 'MPG')
```

## Histograma

Abaixo um exemplo de um histograma:

```{r}
hist(df_mtcars$HP, col ='cyan4', 
     main = 'Histograma', xlab = 'HP',
     ylab = 'Qtde')
```

------------------------------------------------------------------------

@schumuller2019

Ãšltima atualizaÃ§Ã£o: `r format(file.info('r_graficos.qmd')$mtime, '%d/%m/%Y - %H:%M:%S')`
