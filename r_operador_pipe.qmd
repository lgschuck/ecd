---
engine: knitr
---

# Operador Pipe

[Status](convencoes.html#status-do-material) üü¶üü®üü®

## Introdu√ß√£o

Muitas vezes seu c√≥digo demanda muitas transforma√ß√µes e acaba ficando muito verboso e de dific√≠l entendimento. Uma forma de facilitar a compreens√£o em torno das opera√ß√µes em sequ√™ncia √© criar um fluxo em que as opera√ß√µes v√£o sendo efetuadas em sequ√™ncia, onde as entradas s√£o as sa√≠das do passo anterior.

O operador `|>` (*pipe*) existe com este intuito, organizar as opera√ß√µes em um fluxo cont√≠nuo. O *pipe* foi implementado a partir da vers√£o 4.1.0 do R e passa um valor para uma fun√ß√£o. Os dados s√£o passados do lado esquerdo (**lfs** - *left hand side*) para o lado direito (**rhs** - *right hand side*). O valor do lado esquerdo (lhs) √© passado como o primeiro argumento da fun√ß√£o do lado direito (rhs).

Vejamos um exemplo simplificado onde o vetor que possue n√∫meros de 1 at√© 20 √© passado para a fun√ß√£o `head`. Com o uso do `|>` o vetor √© passado como **primeiro argumento** da fun√ß√£o `head` e esta por sua vez exibe os seis primeiros elementos.

```{r}
c(1:20) |> head()
```

O c√≥digo acima √© equivalente a:

```{r}
head(c(1:20))
```

Caso se deseje alterar o n√∫mero de elementos, basta usar o argumento **n**.

```{r}
c(1:20) |> head(n = 10)
```

Equivalente a:

```{r}
head(c(1:20), n = 10)
```

Vejamos um outro exemplo, um pouco mais realista e complexo: usar a base **mtcars** e a partir desta selecionar casos em que o campo **mpg** seja maior do que 10 e ap√≥s criar uma vari√°vel chamada **media_hp**, que ser√° a m√©dia a partir do campo **hp**. Poderia ser feito algo do tipo:

```{r}
df_mtcars <- subset(mtcars, mpg > 10)
media_hp <- mean(df_mtcars$hp)
media_hp
```

Mesmo sendo um processo pequeno com apenas 2 opera√ß√µes bastante corriqueiras, ler o c√≥digo j√° se torna enfadonho, para dizer o m√≠nimo. Tamb√©m n√£o fica claro, em uma passada de olhos, se as opera√ß√µes possuem rela√ß√£o entre si.

Imagine agora criar as mesmas opera√ß√µes de forma "concatenada" em que uma transforma√ß√£o √© passada para a seguinte at√© que se chegue ao final do fluxo. Em linguagem "humana" algo do tipo:

data frame ‚û°Ô∏è filtrar casos ‚û°Ô∏è selecionar vari√°vel ‚û°Ô∏è calcular m√©dia

Em R:

```{r}
mtcars |> 
  subset(mpg > 10) |> 
  subset(select = hp, drop = T) |> 
  mean()

# ou de forma mais sucinta
mtcars |> 
  subset(mpg > 10, select = hp, drop = T) |> 
  mean()
```

Este c√≥digo √© equivalente ao anterior, por√©m aqui fica mais claro que todas as transforma√ß√µes foram feitas a fim de obter o valor da m√©dia de **hp** dos casos desejados (**mpg \> 10**). Para fazer a atribui√ß√£o do resultado em uma vari√°vel basta, como de costume, ao in√≠cio ou ao final usar o operador de atribui√ß√£o `<-.`

```{r}
media_hp <- mtcars |> 
  subset(mpg > 10) |> 
  subset(select = hp, drop = T) |> 
  mean()

media_hp

# ou de forma menos usual
mtcars |> 
  subset(mpg > 10) |> 
  subset(select = hp, drop = T) |> 
  mean() -> media_hp

media_hp
```

## Placeholder

A partir da vers√£o **4.2.0** o *pipe* passou a ter um ***placeholder*** (s√≠mbolo **`_`**) que serve para que o valor **lfs** seja passado para outro argumento que n√£o o primeiro da fun√ß√£o **rhs**.

```{r}
8 |> head(c(1:20), n = _)
```

Equivalente a:

```{r}
head(c(1:20), n = 8)
```

A partir da vers√£o **4.3.0** o *placeholder* tamb√©m pode ser utilizado para opera√ß√µes de extra√ß√µes com `[`. Replicando o exemplo do c√°lculo de **media_hp**, por√©m agora fazendo a extra√ß√£o da vari√°vel **hp** que √© retornada como um vetor e passada para a fun√ß√£o `mean`.

```{r}
media_hp <- mtcars |> 
  subset(mpg > 10) |> 
  _$hp |> 
  mean()

media_hp
```

------------------------------------------------------------------------

@r_news

@pipe_x_magrittr

√öltima atualiza√ß√£o: `r format(file.info('r_operador_pipe.qmd')$mtime, '%d/%m/%Y - %H:%M:%S')`
