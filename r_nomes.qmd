# Nomeando Objetos

[Status](convencoes.html#status-do-material) ğŸŸ¦ğŸŸ¦ğŸŸ¦

## Regras

A linguagem R aceita muitas possibilidades para nomeaÃ§Ã£o de objetos. Inclusive podem ser criados objetos com espaÃ§os em seus nomes e atÃ© mesmo com caracteres especiais (desde que entre aspas ou crases).

```{r}
x <- 10

.x <- 10

`nome com espaco` <- 55

'teste 1' <- 2
```

::: callout-tip
## Nomes Significativos

Escolha nomes intuitivos e que facilitem a identificaÃ§Ã£o do conteÃºdo armazenado nos objetos.
:::

Um objeto criado atravÃ©s do uso de aspas ou crases tem seu conteÃºdo acessado quando "chamado" com crases (*backticks*). Aspas sÃ£o entendidas como sinalizaÃ§Ã£o para strings e assim nÃ£o retornam o conteÃºdo do objeto e sim a prÃ³pria string informada.

```{r}
'teste 1' # retorna como string
`teste 1` # Exibe conteÃºdo do objeto
```

### Primeiro Caractere

Existem algumas regras para iniciar o nome dos objetos. Alguns caracteres "especiais" nÃ£o podem ser usados, bem como os nÃºmeros.

```{r, error = T}
$x <- 10  
```

```{r, error = T}
55x <- 10 
```

Perceba que nÃºmeros podem ser usados nos nomes, desde que o primeiro caractere seja 'vÃ¡lido'. Mas o mesmo nÃ£o ocorre com caracteres "especiais".

```{r}
x55x <- 888

x55x
```

```{r error = T}
x$ <- 10
```

Uma alternativa se dÃ¡ mais uma vez com o uso de aspas ou crases. Com elas Ã© possÃ­vel 'burlar' estas limitaÃ§Ãµes.

```{r}
`teste @!&` <- 123456

`teste @!&`

'55 teste @!&' <- 10

`55 teste @!&`
```

Apesar de possÃ­vel, objetos com nomes mais complicados como os exemplificados acabam tornando a vida do programador um pouco mais difÃ­cil. Em geral, evite caracteres caracteres especiais e espaÃ§os nos nomes. Caso algum dado (bases de dados) seja carregado de arquivo externo com este tipo de caracteres, faÃ§a a uniformizaÃ§Ã£o dos nomes o quanto antes.

#### Objetos "Ocultos"

Objetos podem ser criados com "." no inÃ­cio de seus nomes desde que o segundo carctere seja uma letra. Estes sÃ£o objetos "ocultos" e portanto nÃ£o aparecem em um comando `ls` "puro", por exemplo. Tampouco sÃ£o exibidos na aba Environment do RStudio. Para visualizÃ¡-los atravÃ©s da funÃ§Ã£o `ls` deve ser usado o parÃ¢metro `all.names = T`.

```{r}
ls()
ls(all.names = T)
```

### Case Sensitive

R Ã© uma linguagem *case sensitive*, ou seja, ela diferencia maiÃºsculas de minÃºsculas. Assim um objeto com nome de Teste Ã© diferente teste, tesTe, TESTE...

```{r}
teste <- 10
Teste <- 15
tesTe <- 20
TESTE <- 25

ls()
```

::: callout-tip
## Campos de Tabelas

Campos (variÃ¡veis) de dados tabulados, como planilhas de Excel, seguem as mesmas regras. Este tipo de dado serÃ¡ tratado no capÃ­tulo sobre **data frames**.
:::

## Resumo

+----------------------+------------------------------------+--------------------------------------+--------------+
| Caracteres           | Regra                              | ExceÃ§Ã£o                              | Exemplo      |
+======================+====================================+======================================+==============+
| Letras               | Permitido                          |                                      | objeto       |
|                      |                                    |                                      |              |
|                      |                                    |                                      | variavel     |
+----------------------+------------------------------------+--------------------------------------+--------------+
| NÃºmeros              | Permitido, apÃ³s primeiro caractere | Iniciado com '.'                     | objeto1      |
|                      |                                    |                                      |              |
|                      |                                    |                                      | ~~1objeto~~  |
|                      |                                    |                                      |              |
|                      |                                    |                                      | ~~.1objeto~~ |
+----------------------+------------------------------------+--------------------------------------+--------------+
| EspaÃ§os              | NÃ£o permitido                      | Permitido com uso de aspas ou crases | ~~teste 1~~  |
|                      |                                    |                                      |              |
|                      |                                    |                                      | 'teste 2'    |
|                      |                                    |                                      |              |
|                      |                                    |                                      | '2 teste'    |
+----------------------+------------------------------------+--------------------------------------+--------------+
| Caracteres especiais | NÃ£o permitido                      | Permitido com uso de aspas ou crases | ~~#teste~~   |
|                      |                                    |                                      |              |
|                      |                                    |                                      | '\# teste'   |
|                      |                                    |                                      |              |
|                      |                                    |                                      | 't #\$\$%'   |
+----------------------+------------------------------------+--------------------------------------+--------------+
| Ponto '.'            | Uso livre inclusive no inÃ­cio      |                                      | objeto.2     |
|                      |                                    |                                      |              |
|                      |                                    |                                      | .objeto.2    |
+----------------------+------------------------------------+--------------------------------------+--------------+

: Resumo das Regras para Nomes

## ConvenÃ§Ãµes

Conforme o seu cÃ³digo em R (e de outra linguagem qualquer) for crescendo vocÃª perceberÃ¡ rapidamente a necessidade de identificar de forma intuitiva os objetos criados. Assim, Ã© muito interessante a utilizaÃ§Ã£o de alguma convenÃ§Ã£o para facilitar sua vida. Existem diversas delas, como **camelCase**, **snake_case**, **SCREAMING_SNAKE_CASE**, **PascalCase**, etc.

```{r}

# camelCase
objetoTeste <- 'Teste camelCase'

# snake_case
objeto_teste <- 'Teste snake_case'

```

Um bom guia Ã© o [The tidyverse style guide](https://style.tidyverse.org/syntax.html). Tenha sempre em mente que sue cÃ³digo deve ser lido com facilidade no futuro e muitas vezes por outros usuÃ¡rios.

Neste material os nomes de objetos e derivados seguirÃ£o a tabela abaixo. Estas definiÃ§Ãµes foram escolhidas a fim de uniformizar o conteÃºdo apresentado e se baseiam em experiÃªncia de uso e no **Tidyverse Style Guide**. Mais detalhes em [ConvenÃ§Ãµes](convencoes.html).

+----------------------------------+--------------------------------------------------------------------------+------------------+
| Tipo Objeto                      | ConvenÃ§Ã£o                                                                | Exemplo          |
+==================================+==========================================================================+==================+
| Data.frame, tibble ou data.table | snake_case iniciado por df (**d**ata **f**rame)                          | df_clientes      |
+----------------------------------+--------------------------------------------------------------------------+------------------+
| VariÃ¡veis de datasets            | SCREAMING_SNAKE_CASE                                                     | NOME_CLIENTE     |
+----------------------------------+--------------------------------------------------------------------------+------------------+
| FunÃ§Ãµes                          | camelCase iniciado por **fn**, sendo a primeira palavra apÃ³s fn um verbo | fnBuscarClientes |
+----------------------------------+--------------------------------------------------------------------------+------------------+
| Demais (vetores, listas, etc.)   | snake_case                                                               | nomes_cidades    |
+----------------------------------+--------------------------------------------------------------------------+------------------+

::: callout-tip
Evite usar "**.**" em nome de objetos, pois atravÃ©s do **ponto** o R acessa funÃ§Ãµes (mÃ©todos) de acordo com a classe do objeto. Usar o ponto pode causar certa confusÃ£o. Mais detalhes [FunÃ§Ãµes](r_funcoes.html#funÃ§Ãµes-genÃ©ricas).
:::

------------------------------------------------------------------------

@grolemund2014

@introduction_r

@wiki_naming_convention

Ãšltima atualizaÃ§Ã£o: `r format(file.info('r_nomes.qmd')$mtime, '%d/%m/%Y - %H:%M:%S')`
