# Pacote Data.table

[Status](convencoes.html#status-do-material) ğŸŸ¦ğŸŸ¨ğŸŸ¨

O pacote **data.table** oferece estrutura para manipulaÃ§Ã£o de bases de dados de forma mais rÃ¡pida que a base do R. As estruturas de dados sÃ£o chamadas de **data tables** e funcionam de forma similar a um **data frame**.

```{r}
library(data.table)

df_aprovacoes <-
  readRDS('./data/aprovacoes_por_porte_de_empresa.RDS')

df_aprovacoes <- setDT(df_aprovacoes)
df_aprovacoes |> class()
```

As operaÃ§Ãµes realizadas com **data tables** possuem sintaxe especÃ­fica e bastante sucinta. As operaÃ§Ãµes sÃ£o feitas sobre a base de dados na seguinte forma:

*base[ linhas, colunas, agregaÃ§Ã£o ]*

## Filtrando Dados

De forma anÃ¡logo a um **data frame** padrÃ£o, os filtros nas linhas ocorrem antes da vÃ­rgula e podem usar operadores lÃ³gicos e relacionais.

```{r}
df_aprovacoes[ANO == 2022 & MES > 6, ]
```

## Criando VariÃ¡veis

A criaÃ§Ã£o de variÃ¡vel pode ser feita com o operador `:=`. Neste formato o cÃ³digo fica bastante limpo e reduzido, facilitando a leitura.

```{r}
df_aprovacoes[, RAZAO_GRANDE_MICRO := GRANDE / MICRO]
df_aprovacoes[, RAZAO_GRANDE_MICRO] |> head()
```

## Agrupando

Exemplo com criaÃ§Ã£o da mÃ©dia de valores aprovados para o porte **MICRO** por ano, sendo que o ano deve ser a partir de 2020.

```{r}
df_aprovacoes[ANO > 2019, list(MEAN_MICRO = mean(MICRO)), by = c('ANO')]
```

## Ordenando Dados

A funÃ§Ã£o `setorder` permite ordenaÃ§Ã£o da base de dados sem exigir atribuiÃ§Ã£o como usado com R base (base <- base[order(base$var1),]).

```{r}
df_aprovacoes |> head()
setorder(df_aprovacoes, -ANO, MES)
df_aprovacoes |> head(n = 8)
```

------------------------------------------------------------------------

Ãšltima atualizaÃ§Ã£o: `r format(file.info('pacotes_data_table.qmd')$mtime, '%d/%m/%Y - %H:%M:%S')`
