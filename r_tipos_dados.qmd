# Tipos de Dados

[Status](convencoes.html#status-do-material) üü®üü®üü®

## L√≥gico (*Logical*) 

Dados do tipo l√≥gico podem assumir basicamente dois valores, verdadeiro (`TRUE`) e falso (`FALSE`). Estes valores podem ser abreviados por `T` e `F`, respectivamente.

```{r}
is.logical(TRUE)
is.logical(FALSE)
typeof(T)
typeof(F)
is.logical(1)
is.logical(0)
```

Testes l√≥gicos retornam valores l√≥gicos.

```{r}
is.logical(5 > 5)
typeof(10 < 9)
```

`TRUE` e `FALSE` s√£o palavras reservadas, portanto n√£o podem ser usadas como objetos.

```{r, error = T}
TRUE <- 10
```

### Valores Faltantes (**NA**)

Em R a constante `NA` (*Not Available*) √© usada para expressar valores faltantes. O `NA` √© do tipo l√≥gico, mas pode ser atribu√≠do a vetores de outros tipos (exceto *raw*) atrav√©s de coer√ß√£o.

```{r}
typeof(NA)
is.na(NA)

vetor_1 <- c(1:5, NA, 6:10)
vetor_1

typeof(vetor_1)
```

Os valores faltantes s√£o muito importantes na an√°lise de dados, pois podem influenciar c√°lculos e transforma√ß√µes. At√© mesmo opera√ß√µes aritm√©ticas b√°sicas s√£o influenciadas pelo valores faltantes.

```{r}
1 + 5 + NA
```

Fun√ß√µes tamb√©m s√£o influenciadas pela presen√ßa dos dados faltantes. A fun√ß√£o `max`, por exemplo, que retorna o maior valor dentre os informados, retorna `NA` se este estiver presente.

```{r}
max(vetor_1)
```

## Inteiros (*Integer*)

N√∫meros inteiros s√£o do tipo `integer` e devem ser criados com a letra **L** ao seu lado. Sem este indicador, por padr√£o, o R entende o n√∫mero como do tipo `double`.

```{r}
typeof(1L)
typeof(1)
```

Para testar se um n√∫mero √© do tipo inteiro pode-se utiliazr a fun√ß√£o `is.integer`.

```{r}
is.integer(1)
```

Para transformar um valor para inteiro usa-se a fun√ß√£o `as.integer`.

```{r}
is.integer(as.integer(1))
as.integer(1.99)
```

## Ponto Flutuante (*Double*)

De forma grosseira, *doubles* s√£o valores num√©ricos com decimais.

```{r}
is.double(1)
```


### *Not a Number* (**NaN**)

Valores `NaN` ('n√£o um n√∫mero') s√£o valores de tipo **double**. Valores `NaN` impactam opera√ß√µes l√≥gicas e matem√°ticas.

```{r}
typeof(NaN)

NaN > 10

NaN * 10

10/NaN
5 + NaN
```

### **Inf** e **-Inf**

No R os valores **Inf** e **-Inf** representam infinito e infinito negativo, respectivamente.

Estes valores impactam c√°lculos.

```{r}
is.infinite(Inf)
5 + Inf
Inf + Inf
-Inf * -1 
Inf - Inf
```

Mas opera√ß√µes l√≥gicas seguem o 'senso comum'.

```{r}
Inf > 10
Inf > -Inf
Inf == Inf
```

Valores infinitos podem ser gerados se muito grandes ou por valores divididos por zeros.

```{r}
10^308
10^309

10/0
-10/0
```

Mas veja que zero dividido por zero √© `NaN`.

```{r}
0/0
0/Inf
```

## Fatores (*Factor*)

------------------------------------------------------------------------

√öltima atualiza√ß√£o: `r format(file.info('r_tipos_dados.qmd')$mtime, '%d/%m/%Y - %H:%M:%S')`
