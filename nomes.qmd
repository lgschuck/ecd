# Nomeando Objetos

## Nomes

A linguagem R aceita muitas possibilidades para nomeação de objetos. Inclusive podem ser criados objetos com espaços em seus nomes e até mesmo com caracteres especiais (desde que entre aspas ou crases).

```{r}
x <- 10

.x <- 10

`nome com espaco` <- 55

'teste 1' <- 2

```

::: callout-tip
## Nomes Significativos

Escolha nomes intuitivos e que facilitem a identificação do conteúdo armazenado nos objetos.
:::

Um objeto criado através do uso de aspas ou crases tem seu conteúdo acessado quando "chamado" com crases. Aspas são entendidas como sinalização para strings e assim não retornam o conteúdo do objeto e sim a própria string informada.

```{r}
'teste 1' #retorna como string
# Exibe conteúdo do objeto
`teste 1`
```

Objetos podem ser criados com "." no início de seus nomes. Estes são objetos ocultos e portanto não aparecem em um comando ls "puro", por exemplo. Tampouco são exibidos na aba Environment do RStudio. Para visualizá-los através da função ls pode ser usado o parâmetro all.names = T.

```{r}
ls()
ls(all.names = T)
```

### Primeiro Caractere

Existem algumas regras para iniciar o nome dos objetos. Alguns caracteres "especiais" não podem ser usados, bem como os números.

```{r, error = T}
$x <- 10  
```

```{r, error = T}
55x <- 10 
```

Perceba que números podem ser usados nos nomes, desde que o primeiro caractere seja 'válido'. Mas o mesmo não ocorre com caracteres "especiais".

```{r}
x55x <- 888

x55x
```

```{r error = T}
x$ <- 10
```

Uma alternativa se dá mais uma vez com o uso de aspas ou crases. Com elas é possível 'burlar' estas limitações.

```{r}
`teste @!&` <- 123456

`teste @!&`

'55 teste @!&' <- 10

`55 teste @!&`
```

Apesar de possível, objetos com nomes mais complicados como os exemplificados acabam tornando a vida do programador um pouco mais difícil.

## Case Sensitive

R é uma linguagem *case sensitive*, ou seja, ela diferencia maiúsculas de minúsculas. Assim um objeto com nome de Teste é diferente teste, tesTe, TESTE...

```{r}
teste <- 10
Teste <- 15
tesTe <- 20
TESTE <- 25

ls()
```

## Convenções

Conforme o seu código em R (e de outra linguagem qualquer) for crescendo você perceberá rapidamente a necessidade de identificar de forma intuitiva os objetos criados. Assim, é muito interessante a utilização de alguma convenção para facilitar sua vida. Existem diversas delas, como camelCase, snake_case, SCREAMING_SNAKE_CASE, etc. Uma "regra" importante seria não usar "." em nome de objetos, pois através do ponto o R acessa funções (métodos) de acordo com a classe do objeto. Usar o ponto pode causar certa confusão.

```{r}

# camelCase
objetoTeste <- 'Teste camelCase'

# snake_case
objeto_teste <- 'Teste snake_case'

```

Um bom guia é o [The tidyverse style guide](https://style.tidyverse.org/syntax.html). Tenha sempre em mente que sue código deve ser lido com facilidade no futuro, seja ele próximo ou distante.

------------------------------------------------------------------------

[Hands-On Programming with R](https://rstudio-education.github.io/hopr/), especialmente capítulo 2 - The Very Basics

[R Manuals :: An Introduction to R - Capítulo 1](https://rstudio.github.io/r-manuals/r-intro/Introduction-and-preliminaries.html)

[Naming_convention\_(programming)](https://en.wikipedia.org/wiki/Naming_convention_(programming))

Última atualização: `r format(file.info('nomes.qmd')$mtime, '%d/%m/%Y - %H:%M:%S')`
